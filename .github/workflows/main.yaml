name: Build, Test, Analyze & Push Docker Image

on:
  push:
    branches:
      - develop


jobs:
  build:
    name: Build, Test & Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configuration de Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
#      - name: Cache SonarQube packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#      - name: Cache Maven dependencies
#        uses: actions/cache@v4
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#      - name: Build, Test et Analyse SonarQube
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: |
#          mvn -X clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
#            -Dsonar.projectKey=cda-exam_cda-final-project-backend \
#            -Dproject.settings=sonar-project.properties
#      - name: Sauvegarde de l’artefact
#        uses: actions/upload-artifact@v4
#        with:
#          name: spring-boot-app
#          path: target/*.jar
#          retention-days: 7
  docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Télécharger l’artefact
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-app
          path: target/
      - name: Checkout du code
        uses: actions/checkout@v4
      - name: Connexion à Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build de l’image Docker
        run: |
          docker build --no-cache --rm -t ${{ secrets.DOCKER_USERNAME }}/cda-final-project-backend:latest .
      - name: Push de l’image Docker sur Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/cda-final-project-backend:latest